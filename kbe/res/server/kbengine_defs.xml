<root>
	<gameUpdateHertz> 10 </gameUpdateHertz>
	<bitsPerSecondToClient> 20000 </bitsPerSecondToClient> <!-- Type: Integer -->
	
	<!-- 非0则不优化， 不带包长信息的包强制都携带长度信息， 某些情况下方便某些前端对接协议
	什么样的包不带长度信息? 所有能够预先计算出包大小的且永远不变的包不带长度信息， 
	如果有可变字符串参数则一定需要带长度信息 -->
	<packetAlwaysContainLength>0</packetAlwaysContainLength>
	
	<!-- 是否需要将任何接收和发送的包以文本输出到log中提供调试
		debug_type:
			0: 不输出
			1: 16进制输出
			2: 字符流输出
			3: 10进制输出
		use_logfile:
			是否独立一个log文件来记录包内容，文件名通常为
			appname_packetlogs.log
		disable_msgs:
			关闭某些包的输出
	-->
	<trace_packet>
		<debug_type>0</debug_type>
		<use_logfile>false</use_logfile>
		<disables>
			<item>Baseappmgr::updateBaseapp</item>
			<item>Cellapp::onUpdateDataFromClient</item>
			<item>Baseapp::onUpdateDataFromClient</item>
			<item>Baseapp::forwardMessageToClientFromCellapp</item>
			<item>Client::onUpdateVolatileData</item>
			<item>Client::onUpdateData</item>
			<item>Client::onUpdateBasePos</item>
			<item>Client::onUpdateData_xz</item>
			<item>Client::onUpdateData_xyz</item>
			<item>Client::onUpdateData_y</item>
			<item>Client::onUpdateData_r</item>
			<item>Client::onUpdateData_p</item>
			<item>Client::onUpdateData_ypr</item>
			<item>Client::onUpdateData_yp</item>
			<item>Client::onUpdateData_yr</item>
			<item>Client::onUpdateData_pr</item>
			<item>Client::onUpdateData_xz_y</item>
			<item>Client::onUpdateData_xz_p</item>
			<item>Client::onUpdateData_xz_r</item>
			<item>Client::onUpdateData_xz_yr</item>
			<item>Client::onUpdateData_xz_yp</item>
			<item>Client::onUpdateData_xz_pr</item>
			<item>Client::onUpdateData_xz_ypr</item>
			<item>Client::onUpdateData_xyz_y</item>
			<item>Client::onUpdateData_xyz_p</item>
			<item>Client::onUpdateData_xyz_r</item>
			<item>Client::onUpdateData_xyz_yr</item>
			<item>Client::onUpdateData_xyz_yp</item>
			<item>Client::onUpdateData_xyz_pr</item>
			<item>Client::onUpdateData_xyz_ypr</item>
		</disables>
	</trace_packet>
	
	<!-- 是否输出entity的创建， 脚本获取属性， 初始化属性等调试信息 -->
	<debugEntity>0</debugEntity>

	<!-- apps发布状态, 可在脚本中获取该值
		Type: Integer8
		0 : debug
		1 : release
		其他自定义
	-->
	<app_publish>0</app_publish>
	
	<cellapps> 1 </cellapps>
	<baseapps> 1 </baseapps>
	
	<channelCommon> 
		<!-- 频道最后一次通信时间超过此时间则被认定为超时通道， 服务器将踢出该通道 -->
		<timeout> 
			<internal> 60.0 </internal>
			<external> 60.0 </external>
		</timeout>
		
		<!-- socket读写缓冲大小 -->
		<readBufferSize> 
			<internal>	16777216	</internal> 			<!-- 16M -->
			<external>	0			</external>				<!-- 系统默认 -->
		</readBufferSize>
		<writeBufferSize> 
			<internal>	16777216	</internal>				<!-- 16M -->
			<external>	0			</external>				<!-- 系统默认 -->
		</writeBufferSize>
		
		<!-- 一个游戏周期channel接收窗口溢出值 0无限制-->
		<receiveWindowOverflow>
			<messages>
				<critical>	32			</critical>
				<internal>	65535		</internal>
				<external>	256			</external>
			</messages>
			<bytes>
				<internal>	0			</internal>
				<external>	65535		</external>
			</bytes>
		</receiveWindowOverflow>
		
		<!-- 加密通信，只对外部通道
			可选加密:
				0: 无加密
				1: blowfish
				2: rsa (res\key\kbengine_private.key)
		 -->
		<encrypt_type> 1 </encrypt_type>
	</channelCommon> 
	
	<!-- 关服倒计时(秒) -->
	<shutdown_time> 60.0 </shutdown_time>
	<!-- 关服等待任务结束tick(秒) -->
	<shutdown_waittick> 1.0 </shutdown_waittick>
	
	<!-- callback默认超时时间(秒) -->
	<callback_timeout> 300.0 </callback_timeout>
	
	<thread_pool>
		<!-- 默认超时时间(秒) -->
		<timeout> 300.0 </timeout>
		
		<init_create> 1 </init_create>
		<pre_create> 2 </pre_create>
		<max_create> 8 </max_create>
	</thread_pool>
	
	<!-- email 服务 -->
	<email_service_config>server/email_service.xml</email_service_config>
		
	<billingSystem>
		<!-- normal: 普通, thirdparty: 第三方此时需要提供ip地址 -->
		<accountType> normal </accountType>
		<chargeType> normal </chargeType>
		
		<!-- 进程地址 -->
		<host> localhost </host>
		<port> 30099 	</port>
		
		<!-- 订单超时(secs) -->
		<orders_timeout> 3600 	</orders_timeout>
		
		<!-- 第三方运营账号服务接口 如: www.google.com, 当type是thirdparty时有效 -->
		<thirdpartyAccountService_addr></thirdpartyAccountService_addr>
		<thirdpartyAccountService_port> 80 </thirdpartyAccountService_port>
		
		<!-- 第三方运营充值服务接口 如: www.google.com, 当type是thirdparty时有效 -->
		<thirdpartyChargeService_addr></thirdpartyChargeService_addr>
		<thirdpartyChargeService_port> 80 </thirdpartyChargeService_port>
		
		<!-- 第三方运营回调端口，这个通道是一个未定义的协议通道， 相关协议需要开发者根据需要自己解析-->
		<thirdpartyService_cbport> 30040 </thirdpartyService_cbport>
		
		<!-- listen监听队列最大值 -->
		<SOMAXCONN> 128 </SOMAXCONN>
	</billingSystem>
	
	<dbmgr>
		<dbAccountEntityScriptType>	Account	</dbAccountEntityScriptType>
		
		<allowEmptyDigest> false </allowEmptyDigest>					<!-- Type: Boolean -->
		
		<internalInterface>  </internalInterface>
		
		<!-- 新账号默认标记(可叠加， 填写时按十进制格式) 
			常规标记 = 0x00000000
			锁定标记 = 0x000000001
			未激活标记 = 0x000000002
		-->
		<accountDefaultFlags> 0 </accountDefaultFlags>					<!-- Type: Integer -->
		<!-- 新账号默认过期时间(秒, 引擎会加上当前时间) -->
		<accountDefaultDeadline> 0 </accountDefaultDeadline>			<!-- Type: Integer -->
		
		<type> mysql </type>											<!-- Type: String -->
		<host> localhost </host>										<!-- Type: String -->
		<port> 0 </port>												<!-- Type: Integer -->
		<auth>  
			<username> kbe </username>									<!-- Type: String -->
			<password> kbe </password>									<!-- Type: String -->
			<!-- 为true则表示password是加密(rsa)的, 可防止明文配置 -->
			<encrypt>true</encrypt>
		</auth>
		<databaseName> kbe </databaseName> 								<!-- Type: String -->
		<numConnections> 5 </numConnections>							<!-- Type: Integer -->
		
		<unicodeString>
			<characterSet> utf8 </characterSet> 						<!-- Type: String -->
			<collation> utf8_bin </collation> 							<!-- Type: String -->
		</unicodeString>
		
		<!-- 登录合法时游戏数据库找不到游戏账号则自动创建 -->
		<notFoundAccountAutoCreate> true </notFoundAccountAutoCreate>
	</dbmgr>
	
	<cellapp>
		<entryScriptFile> kbengine </entryScriptFile>
		
		<defaultAoIRadius>			
			<radius> 80.0 </radius>
			<hysteresisArea> 5.0 </hysteresisArea>
		</defaultAoIRadius>
		
		<internalInterface>  </internalInterface>
		
		<ids>
			<criticallyLowSize> 500 </criticallyLowSize>				<!-- Type: Integer -->
		</ids>
		
		<profiles>
			<!-- 如果设置为true，引擎启动时就会开始记录相关profile信息， 退出时导出一份记录 -->
			<cprofile> false </cprofile>
			<pyprofile> false </pyprofile>
			<eventprofile> false </eventprofile>
			<mercuryprofile> false </mercuryprofile>
		</profiles>
		
		<ghostDistance> 500.0 </ghostDistance>
		<ghostingMaxPerCheck> 64 </ghostingMaxPerCheck> <!-- Type: Integer -->
		<ghostUpdateHertz> 50 </ghostUpdateHertz> <!-- Type: Integer -->
		
		<!-- 是否使用坐标系统 如果为false， aoi、trap、 move等功能将不再维护 -->
		<coordinate_system> 
			<enable> true </enable>
			
			<!-- 范围管理器是管理Y轴， 注：有y轴则aoi、trap等功能有了高度， 
				但y轴的管理会带来一定的消耗 -->
			<rangemgr_y> false </rangemgr_y>
		</coordinate_system>
		
		<!-- 如果被占用则向后尝试50001.. -->
		<telnet_service>
			<port> 50000 </port>
			<password> kbe </password>
			<!-- 命令默认层 -->
			<default_layer> python </default_layer>
		</telnet_service>
		
		<shutdown>
			<!-- 每秒销毁有base的entity -->
			<perSecsDestroyEntitySize> 15 </perSecsDestroyEntitySize>
		</shutdown>
		
		<witness>
			<!-- 观察者 timeout超时(秒) Integer-->
			<timeout> 15 </timeout>
		</witness>
	</cellapp>
	
	<baseapp>
		<entryScriptFile> kbengine </entryScriptFile>
		
		<internalInterface>  </internalInterface>
		<externalInterface>  </externalInterface>						<!-- Type: String -->
		<externalPorts_min> 20015 </externalPorts_min>					<!-- Type: Integer -->
		<externalPorts_max> 20019 </externalPorts_max>					<!-- Type: Integer -->
		
		<archivePeriod> 100 </archivePeriod> 							<!-- Type: Float -->
		<backupPeriod> 10 </backupPeriod>								<!-- Type: Float -->
		<backUpUndefinedProperties> 0 </backUpUndefinedProperties>		<!-- Type: Boolean -->
		
		<loadSmoothingBias> 0.01 </loadSmoothingBias>
		
		<downloadStreaming>
			<bitsPerSecondTotal> 1000000 </bitsPerSecondTotal>			<!-- Type: Int -->
			<bitsPerSecondPerClient> 100000 </bitsPerSecondPerClient>	<!-- Type: Int -->
		</downloadStreaming>
		
		<ids>
			<criticallyLowSize> 500 </criticallyLowSize>				<!-- Type: Integer -->
		</ids>
		
		<!-- entity restore每tick数量 -->
		<entityRestoreSize> 32 </entityRestoreSize>
		
		<profiles>
			<!-- 如果设置为true，引擎启动时就会开始记录相关profile信息， 退出时导出一份记录 -->
			<cprofile> false </cprofile>
			<pyprofile> false </pyprofile>
			<eventprofile> false </eventprofile>
			<mercuryprofile> false </mercuryprofile>
		</profiles>
		
		<!-- listen监听队列最大值 -->
		<SOMAXCONN> 128 </SOMAXCONN>
		
		<!-- 如果被占用则向后尝试40001.. -->
		<telnet_service>
			<port> 40000 </port>
			<password> kbe </password>
			<!-- 命令默认层 -->
			<default_layer> python </default_layer>
		</telnet_service>
		
		<shutdown>
			<!-- 每秒销毁base数量 -->
			<perSecsDestroyEntitySize> 15 </perSecsDestroyEntitySize>
		</shutdown>
		
		<respool>
			<!-- 缓冲区大小也等于资源大小， 在这个KB大小范围以内的资源才可以进入资源池 -->
			<buffer_size> 1024 </buffer_size>
			<!-- 资源池中的资源超过这个时间未被访问则销毁(秒) -->
			<timeout> 600 </timeout>
			<!-- 资源池检查tick(秒) -->
			<checktick>60</checktick>
		</respool>
	</baseapp>
	
	<cellappmgr>
		<internalInterface>  </internalInterface>
	</cellappmgr>
	
	<baseappmgr>
		<internalInterface>  </internalInterface>
	</baseappmgr>
	
	<loginapp>
		<internalInterface>  </internalInterface>
		<externalInterface>  </externalInterface>						<!-- Type: String -->
		<externalPorts_min> 20013 </externalPorts_min>					<!-- Type: Integer -->
		<externalPorts_max> 0 </externalPorts_max>						<!-- Type: Integer -->
		
		<allowUnencryptedLogins> false </allowUnencryptedLogins>		<!-- Type: Boolean -->
		
		<!-- 加密登录信息
			可选加密:
				0: 无加密
				1: blowfish
				2: rsa (res\key\kbengine_private.key)
		 -->
		<encrypt_login> 2 </encrypt_login>
		
		<!-- listen监听队列最大值 -->
		<SOMAXCONN> 128 </SOMAXCONN>
		
		<!-- 
			1: 普通账号
			2: email账号(需要激活)
			3: 智能账号(自动识别email， 普通号码等) 
		-->
		<account_type> 3 </account_type>
		
		<!-- 用户http回调接口，处理认证、密码重置等 -->
		<http_cbhost> localhost </http_cbhost>
		<http_cbport> 21103 </http_cbport>
	</loginapp>		
	
	<kbmachine>
		<externalPorts_min> 20099 </externalPorts_min>					<!-- Type: Integer -->
		<externalPorts_max> 0 </externalPorts_max>						<!-- Type: Integer -->
	</kbmachine>
	
	<kbcenter>
		<internalInterface>  </internalInterface>
	</kbcenter>
	
	<bots>
		<internalInterface>  </internalInterface>
		<host> localhost </host>										<!-- Type: String -->
		<port> 20013 </port>											<!-- Type: Integer -->
		
		<!-- 默认启动进程后自动添加这么多个bots 
			totalcount： 添加总数量
			ticktime： 每次添加所用时间(s)
			tickcount： 每次添加数量
		-->
		<defaultAddBots> 
			<totalcount> 10  </totalcount> <!-- Type: Integer -->
			<ticktime> 0.1  </ticktime> <!-- Type: Float -->
			<tickcount> 2  </tickcount> <!-- Type: Integer -->
		</defaultAddBots>							
	</bots>
	
	<messagelog>
		<internalInterface>  </internalInterface>
	</messagelog>
	
	<resourcemgr>
		<internalInterface>  </internalInterface>
		
		<downloadStreaming>
			<bitsPerSecondTotal> 1000000 </bitsPerSecondTotal>			<!-- Type: Int -->
			<bitsPerSecondPerClient> 100000 </bitsPerSecondPerClient>	<!-- Type: Int -->
		</downloadStreaming>
		
		<!-- listen监听队列最大值 -->
		<SOMAXCONN> 128 </SOMAXCONN>
		
		<respool>
			<!-- 缓冲区大小也等于资源大小， 在这个KB大小范围以内的资源才可以进入资源池 -->
			<buffer_size> 1024 </buffer_size>
			<!-- 资源池中的资源超过这个时间未被访问则销毁(秒) -->
			<timeout> 600 </timeout>
			<!-- 资源池检查tick(秒) -->
			<checktick>60</checktick>
		</respool>
	</resourcemgr>
</root>
