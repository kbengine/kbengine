.\" This manpage is Copyright (C) 2016 MongoDB, Inc.
.\" 
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.3
.\" or any later version published by the Free Software Foundation;
.\" with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
.\" A copy of the license is included in the section entitled "GNU
.\" Free Documentation License".
.\" 
.TH "MONGOC_COLLECTION_FIND_AND_MODIFY" "3" "2016\(hy03\(hy30" "MongoDB C Driver"
.SH NAME
mongoc_collection_find_and_modify() \- Update and return an object.
.SH "SYNOPSIS"

.nf
.nf
bool
mongoc_collection_find_and_modify (mongoc_collection_t *collection,
                                   const bson_t        *query,
                                   const bson_t        *sort,
                                   const bson_t        *update,
                                   const bson_t        *fields,
                                   bool                 _remove,
                                   bool                 upsert,
                                   bool                 _new,
                                   bson_t              *reply,
                                   bson_error_t        *error);
.fi
.fi

.SH "PARAMETERS"

.TP
.B
collection
A
.B mongoc_collection_t
\e&.
.LP
.TP
.B
query
A
.B bson_t
containing the query to locate target document(s).
.LP
.TP
.B
sort
A
.B bson_t
containing the sort order for
.B query
\e&.
.LP
.TP
.B
update
A
.B bson_t
containing an update spec.
.LP
.TP
.B
fields
An optional
.B bson_t
containing the fields to return or
.B NULL
\e&.
.LP
.TP
.B
_remove
If the matching documents should be removed.
.LP
.TP
.B
upsert
If an upsert should be performed.
.LP
.TP
.B
_new
If the new version of the document should be returned.
.LP
.TP
.B
reply
An optional location for a
.B bson_t
that will be initialized with the result or
.B NULL
\e&.
.LP
.TP
.B
error
An optional location for a
.B bson_error_t
or
.B NULL
\e&.
.LP

.SH "DESCRIPTION"

Update and return an object.

This is a thin wrapper around the
.B findAndModify
command. Either
.B update
or
.B _remove
arguments are required.

.B NOTE
.RS
As of MongoDB 3.2 and mongoc 1.3.0, the
.B mongoc_write_concern_t
specified on the
.B mongoc_collection_t
will be used, if any.
.RE

.SH "ERRORS"

Errors are propagated via the
.B error
parameter.

.SH "RETURNS"

Returns either the document before or after modification based on the
.B _new
parameter.

.SH "EXAMPLE"

.nf

#include <bcon.h>
#include <mongoc.h>
#include <stdio.h>


int
main (int   argc,
      char *argv[])
{
   mongoc_collection_t *collection;
   mongoc_client_t *client;
   bson_error_t error;
   bson_t *query;
   bson_t *update;
   bson_t reply;
   char *str;

   mongoc_init ();

   client = mongoc_client_new ("mongodb://127.0.0.1:27017/");
   collection = mongoc_client_get_collection (client, "test", "test");

   /*
    * Build our query, {"cmpxchg": 1}
    */
   query = BCON_NEW ("cmpxchg", BCON_INT32 (1));

   /*
    * Build our update. {"$set": {"cmpxchg": 2}}
    */
   update = BCON_NEW ("$set", "{", "cmpxchg", BCON_INT32 (2), "}");

   /*
    * Submit the findAndModify.
    */
   if (!mongoc_collection_find_and_modify (collection, query, NULL, update, NULL, false, false, true, &reply, &error)) {
      fprintf (stderr, "find_and_modify() failure: %s\en", error.message);
      return 1;
   }

   /*
    * Print the result as JSON.
    */
   str = bson_as_json (&reply, NULL);
   printf ("%s\en", str);
   bson_free (str);

   /*
    * Cleanup.
    */
   bson_destroy (query);
   bson_destroy (update);
   bson_destroy (&reply);
   mongoc_collection_destroy (collection);
   mongoc_client_destroy (client);

   mongoc_cleanup ();

   return 0;
}
.fi


.B
.SH COLOPHON
This page is part of MongoDB C Driver.
Please report any bugs at https://jira.mongodb.org/browse/CDRIVER.