<?xml version="1.0"?>

<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      style="function"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/"
      id="mongoc_socket_sendv">


  <info>
    <link type="guide" xref="mongoc_socket_t" group="function"/>
  </info>
  <title>mongoc_socket_sendv()</title>

  <section id="synopsis">
    <title>Synopsis</title>
    <synopsis><code mime="text/x-csrc"><![CDATA[ssize_t
mongoc_socket_sendv (mongoc_socket_t *sock,
                     mongoc_iovec_t  *iov,
                     size_t           iovcnt,
                     int64_t          expire_at);
]]></code></synopsis>
  </section>


  <section id="parameters">
    <title>Parameters</title>
    <table>
      <tr><td><p>sock</p></td><td><p>A <code xref="mongoc_socket_t">mongoc_socket_t</code>.</p></td></tr>
      <tr><td><p>iov</p></td><td><p>A mongoc_iovec_t.</p></td></tr>
      <tr><td><p>iovcnt</p></td><td><p>A size_t containing the number of elements in iov.</p></td></tr>
      <tr><td><p>expire_at</p></td><td><p>A int64_t with absolute timeout in monotonic time. The monotonic clock is in microseconds and can be fetched using <code xref="bson:clock">bson_get_monotonic_time()</code>.</p></td></tr>
    </table>
  </section>

  <section id="description">
    <title>Description</title>
    <p>Sends a vector of buffers to the destination. This uses <code>sendmsg()</code> when available to perform a gathered write. If IOV_MAX is reached, a fallback will be used.</p>
  </section>

  <section id="return">
    <title>Returns</title>
    <p>the number of bytes sent on success, or -1 on failure and errno is set.</p>
  </section>


</page>
